package bysj.dao.mapper;

import bysj.domain.po.RestaurantPO;
import bysj.domain.po.RestaurantPOExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface RestaurantPOMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    long countByExample(RestaurantPOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    int deleteByExample(RestaurantPOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    @Delete({
        "delete from restaurant",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    @Insert({
        "insert into restaurant (name, address, ",
        "phone, time, options, ",
        "comment, category, ",
        "longitude, latitude)",
        "values (#{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, #{options,jdbcType=VARCHAR}, ",
        "#{comment,jdbcType=INTEGER}, #{category,jdbcType=VARCHAR}, ",
        "#{longitude,jdbcType=REAL}, #{latitude,jdbcType=REAL})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(RestaurantPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    int insertSelective(RestaurantPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    List<RestaurantPO> selectByExample(RestaurantPOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, name, address, phone, time, options, comment, category, longitude, latitude",
        "from restaurant",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("bysj.dao.mapper.RestaurantPOMapper.BaseResultMap")
    RestaurantPO selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") RestaurantPO record, @Param("example") RestaurantPOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") RestaurantPO record, @Param("example") RestaurantPOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(RestaurantPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table restaurant
     *
     * @mbg.generated
     */
    @Update({
        "update restaurant",
        "set name = #{name,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "time = #{time,jdbcType=VARCHAR},",
          "options = #{options,jdbcType=VARCHAR},",
          "comment = #{comment,jdbcType=INTEGER},",
          "category = #{category,jdbcType=VARCHAR},",
          "longitude = #{longitude,jdbcType=REAL},",
          "latitude = #{latitude,jdbcType=REAL}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(RestaurantPO record);
}