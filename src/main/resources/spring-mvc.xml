<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                        http://www.springframework.org/schema/context   
                        http://www.springframework.org/schema/context/spring-context-4.1.xsd
                        http://www.springframework.org/schema/mvc   
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="bysj.controller"/>
    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven>
        <!--<mvc:message-converters register-defaults="true">-->
        <!--&lt;!&ndash;&lt;!&ndash; 解决Controller返回json中文乱码问题 &ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;<bean class="org.springframework.http.converter.StringHttpMessageConverter">&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash; <property name="supportedMediaTypes" value="text/html;charset=UTF-8" /> &ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash; <property name="supportedMediaTypes" value="application/json;charset=UTF-8" > &ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="supportedMediaTypes">&ndash;&gt;-->
        <!--&lt;!&ndash;<list>&ndash;&gt;-->
        <!--&lt;!&ndash;<value>text/plain;charset=UTF-8</value>&ndash;&gt;-->
        <!--&lt;!&ndash;<value>text/html;charset=UTF-8</value>&ndash;&gt;-->
        <!--&lt;!&ndash;<value>application/json;charset=UTF-8</value>&ndash;&gt;-->
        <!--&lt;!&ndash;</list>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
        <!--&lt;!&ndash;</bean>&ndash;&gt;-->

        <!--&lt;!&ndash;&lt;!&ndash;新加入的配置&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash; fastJson配置 &ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;<bean id="fastJsonHttpMessageConverter"&ndash;&gt;-->
        <!--&lt;!&ndash;class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="supportedMediaTypes">&ndash;&gt;-->
        <!--&lt;!&ndash;<list>&ndash;&gt;-->
        <!--&lt;!&ndash;<value>text/plain;charset=UTF-8</value>&ndash;&gt;-->
        <!--&lt;!&ndash;<value>text/html;charset=UTF-8</value>&ndash;&gt;-->
        <!--&lt;!&ndash;<value>application/json;charset=UTF-8</value>&ndash;&gt;-->
        <!--&lt;!&ndash;</list>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
        <!--&lt;!&ndash;</bean>&ndash;&gt;-->
        <!--&lt;!&ndash;<mvc:message-converters>&ndash;&gt;-->
        <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>-->
        <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
        <!--</mvc:message-converters>-->


        <!--</mvc:message-converters>-->
    </mvc:annotation-driven>

    <!-- 使用thymeleaf解析 -->
    <bean id="templateResolver"
          class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML"/>
        <property name="cacheable" value="false"/>
    </bean>

    <bean id="templateEngine"
          class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>

    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <!--解决中文乱码-->
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!-- 静态资源处理  css js imgs -->
    <!--<mvc:resources location="/webapp/**" mapping="/webapp"/>-->
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <!--<bean id="mappingJacksonHttpMessageConverter"-->
    <!--class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">-->
    <!--<property name="supportedMediaTypes">-->
    <!--<list>-->
    <!--<value>text/plain;charset=UTF-8</value>-->
    <!--<value>text/html;charset=UTF-8</value>-->
    <!--<value>application/json;charset=UTF-8</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->
    <!--&lt;!&ndash; 启动SpringMVC的注解功能，完成请求和注解POJO的映射 &ndash;&gt;-->
    <!--<bean-->
    <!--class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
    <!--<property name="messageConverters">-->
    <!--<list>-->
    <!--<ref bean="mappingJacksonHttpMessageConverter"/> &lt;!&ndash; JSON转换器 &ndash;&gt;-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->
    <!--&lt;!&ndash; 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后&ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
    <!--<property name="order" value="1"></property>-->
    <!--<property name="mediaTypes">-->
    <!--<map>-->
    <!--&lt;!&ndash; 告诉视图解析器，返回的类型为json格式 &ndash;&gt;-->
    <!--<entry key="json" value="application/json"/>-->
    <!--<entry key="xml" value="application/xml"/>-->
    <!--<entry key="htm" value="text/htm"/>-->
    <!--</map>-->
    <!--</property>-->
    <!--<property name="defaultViews">-->
    <!--<list>-->
    <!--&lt;!&ndash; ModelAndView里的数据变成JSON &ndash;&gt;-->
    <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>

    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--&lt;!&ndash; 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 &ndash;&gt;-->
    <!--<property name="prefix" value="/WEB-INF/"/>-->
    <!--<property name="suffix" value=".html"/>-->
    <!--</bean>-->

</beans> 